'''
[ 가장 긴 팰린드롬 ]
앞뒤를 뒤집어도 똑같은 문자열을 palindrome이라고 합니다.
longest_palindrom함수는 문자열 s를 매개변수로 입력받습니다.
s의 부분문자열중 가장 긴 palindrom의 길이를 리턴하는 함수를 완성하세요.
예를들어 s가 토마토맛토마토이면 7을 리턴하고 토마토맛있어이면 3을 리턴합니다.
'''

'''
[ 접근방법 ]
진짜 너무너무너무 어려웠다. 기존의 팰린드롬 문제는 입력값의 팰린드롬 여부를
boolean값으로 나타내는 것이었다면, 이건 있는 경우 가장 킨 길이의 값을 리턴해야
한다.
처음엔 s의 길이가 짝수인 경우와 홀수인 경우, 둘로 나눠서 풀려고 헤맷고,
다음엔 O(n)의 시간복잡도를 만들 수 있는 코드를 보고 꽂혀서 이해없이 따라치다
망했다. 그래서 일반적인 O(n^2)의 코드를 보고 따라했더니 아주 잘됐다.

아래 코드는 s가 팰린드롬이면 바로 s의 길이를 리턴하고,
아니라면 앞에서 하나, 뒤에서 하나 줄여서 비교해보고 그 중 리턴값이 가장 큰 것을
출력하는 방법이다.

참 똑똑한 사람이 많다
'''


def longest_palindrom(s):
    if s[::-1] == s:
        return len(s)
    else:
        return max(longest_palindrom(s[:-1]), longest_palindrom(s[1:]))

# p.s 민구형이랑 같이 풀다 알아낸 사실인데 프로그래머스에서 채점하는 봇은
# 사실 홀수에 대해서만 판단하는 로직을 짜도 정답으로 인정한다.
# 이걸 확인 한 후 민구형은 프로그래머스를 매우 불신했다 ㅋㅋㅋ
