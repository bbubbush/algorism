'''
[ 캥거루 세마리 ]
캥거루 세 마리가 사막에서 놀고 있다. 사막에는 수직선이 하나 있고, 캥거루는 서로 다른 한 좌표 위에 있다.

한 번 움직일 때, 바깥쪽의 두 캥거루 중 한 마리가 다른 두 캥거루 사이의 정수 좌표로 점프한다.
한 좌표 위에 있는 캥거루가 두 마리 이상일 수는 없다.

캥거루는 최대 몇 번 움직일 수 있을까?

입력 예제)
3 5 9

출력 예제)
3

'''

'''
[ 접근방법 ]
재귀함수를 이용해서 풀었다. 입력받은 세 수를 순서대로 a, b, c라고 했을 때,
a와 b가 연속되거나, b와 c가 연속되면 함수를 호출한 횟수를 리턴하게 했다.

b가 a 혹은 c와 연속되지 않을 경우에는 b, b+1(a를 b의 바로 옆으로 이동시킴), c의 경우와
a, b-1(c를 b 바로 옆으로 이동), b 중 결과값이 더 큰 쪽을 출력하게 했다.


ps 다른사람이 이해하기 힘들 정도로 짧게 만드는 숏코딩을 별로 좋아하지 않는데
이 문제는 숏코딩이 더 이해하기 쉽고 좋은 방법이라 생각이 들어 적어두겠다.

# 세 수를 입력받아 b를 기준으로 a와 c 중 거리가 더 먼 값을 찾아 -1을 해서 출력한다.
a와 b의 거리는 c가 들어올수 있는 횟수가 되고, b와 c의 거리 역시 a가 들어올 수 있는 횟수가 된다.
a,b,c=map(int,input().split());print(max(b-a,c-b)-1)

'''

def kangaroo(a, b, c, cnt):
    if a + 1 == b and c - 1 == b:
        return cnt
    if a < b and b < c:
        return max(kangaroo(b, b+1, c, cnt + 1), kangaroo(a, b-1, b, cnt + 1))
    return cnt - 1    
    
    
    
a, b, c = map(int, input().split())
if a < b and b < c:
    print(kangaroo(a, b, c, 0))
else:
    print(0)

    
