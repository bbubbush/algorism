'''
[ 부녀회장이 될테야 ]
평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어
각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.

이 아파트에 거주를 하려면 조건이 있는데,
"a 층의 b 호에 살려면 자신의 아래(a-1)층에 1호부터 b 호까지 사람들의 수의 합만큼 사람들을 데려와 살아야한다”
는 계약 조항을 꼭 지키고 들어와야 한다.

아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정 했을 때,
주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있나를 출력하라.
단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층에 i호에는 i명이 산다.

입력 예제)
2    # Test case
1    # k1
3    # n1
2    # k2
3    # n2

출력 예제)
6
10

'''

'''
[ 접근방법 ]
문제가 1<=k<=14, 1<=n<= 14점을 착안해서 그냥 전체 아파트에 사는 인원의 수를 구해서
배열에 담아두고 입력받은 k, n에 맞는 값을 그냥 출력해줬다.

그럼 핵심이 되는 각 집마다 거주하는 사람의 수를 구하는 방법은 이렇다.

k층 n호에 거주자 수 = (k-1층 n호 거주자 수) + (k층 n-1호 거주자)
0층의 n호들은 n명씩 거주한다는 점에 착안해서 1층까지 거주하는 인원을 계산하다보니
위와같은 식이 도출되었다. 그래서 그냥 처음에 14층 14호까지의 모든 거주자를 구해놓고
각 Test cast의 해당하는 거주자를 리턴해서 처리했다.

'''

# 전체 데이터셋 초기화 및 값 세팅
dp = [[0 for j in range(14)] for i in range(15)]

# 0층 인원수 세팅
for i in range(1, 15):
    dp[0][i-1] = i

# 1층 이상의 아파트 인원수 세팅
for i in range(1, 15):
    for j in range(14):
        if j == 0:
            dp[i][j] = 1
        else:
            dp[i][j] = dp[i-1][j] + dp[i][j-1]

'''
# 데이터 출력
for i in range(14):
    for j in range(14):
        print(dp[i][j], '\t', end='')
    print()
'''

def ThePresidentOfApartment(n, k):
    return dp[n][k-1]


# Testcase를 입력받아 그 수만큼 반복
cnt = int(input())

for count in range(cnt):
    n = int(input())
    k = int(input())
    print(ThePresidentOfApartment(n, k))
