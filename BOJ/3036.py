'''
[ 링 ]
상근이는 창고에서 링 N개를 발견했다. 상근이는 각각의 링이 앞에 있는 링과 뒤에 있는 링과 접하도록 바닥에 내려놓았다. 

상근이는 첫 번째 링을 돌리기 시작했고, 나머지 링도 같이 돌아간다는 사실을 발견했다.
나머지 링은 첫 번째 링 보다 빠르게 돌아가기도 했고, 느리게 돌아가기도 했다. 이렇게 링을 돌리다 보니 첫 번째 링을 한 바퀴 돌리면,
나머지 링은 몇 바퀴 도는지 궁금해졌다.

링의 반지름이 주어진다. 이 때, 첫 번째 링을 한 바퀴 돌리면, 나머지 링은 몇 바퀴 돌아가는지 구하는 프로그램을 작성하시오.

첫째 줄에 링의 개수 N이 주어진다. (3 ≤ N ≤ 100)
다음 줄에는 링의 반지름이 상근이가 바닥에 놓은 순서대로 주어진다. 반지름은 1과 1000를 포함하는 사이의 자연수이다.

출력은 총 N-1줄을 해야 한다. 첫 번째 링을 제외한 각각의 링에 대해서, 첫 번째 링을 한 바퀴 돌리면 그 링은 몇 바퀴 도는지
기약 분수 형태 A/B로 출력한다.


     
입력 예제)
4            -> Number of rings
12 3 8 4     -> radius

출력 예제)
4/1
3/2
3/1

'''
        
'''
[ 접근방법 ]
기약분수 형태로 출력을 해야한다. 기약분수는 문자와 다름이 없기 때문에 사용자가 직접 데이터를 가공해줘야한다. 기준이 되는 base와
다른 링들 각각의 lcm을 구해 나눠주면 약분이 된다. 약분까지만 했다면 그대로 출력형태에 맞춰 출력하면 된다.

base의 값이 작아 1 이상의 값이 나오면 정수로 표현해야 했는데 이것도 그냥 기약분수 형태로 출력해야 정답으로 간주한다.


'''
import math

def ring(base, other):
    for target_ring in other:
        print(str(base // math.gcd(base, target_ring)) + '/' + str(i // math.gcd(base, target_ring)))

# Number of rings
n = int(input())
ring_list = []

for i in input().split():
    ring_list.append(int(i))
    
# ring_list[0] = base, ring_list[1:] = other
ring(ring_list[0], ring_list[1:])


