'''
[ 크로아티아 알파벳 ]
예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다.
따라서, 다음과 같이 크로아티아 알파벳을 다음과 같이 변경해서 입력했다.

크로아티아 알파벳	변경
č			c=
ć			c-
dž			dz=
ñ			d-
lj			lj
nj			nj
š			s=
ž			z=

예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다.
단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.
입력 예제) ljes=njak
출력 예제) 6

'''

'''
[ 접근방법 ]
처음에는 크로아티아 알파벳의 특징을 뽑아내려고 노력했다. 모두 2글자 이상, 3글자 이하이며
뒷 문자가 - || = || j 이면 그 앞에 문자를 판단하여 찾아보려고 했다.
그러다 코드가 점점 산으로 가서 GG
이번엔 리스트를 미리 만들어서 작업했다. 주의한 부분은 소문자 알파벳을 먼저 리스트에 담지 않고
크로아티아 알파벳을 먼저 리스트에 넣어 for문을 통한 반복비교시에 소문자가 먼저 판단되어 원본을
지워 의도되지 않은 코딩이 되는 부분이다. 예를 들어 ljes=njak를 소문자부터 비교한다면 lj는
크로아티아 알파벳인데 소문자 l이 먼저 비교되어 원본에서 l이 제거 된 상태로 판단하게 되므로
오동작하게 된다.
갯수를 샌 알파벳들은 원본에서 replace를 통해 지워줌으로써 처리시간과 정확도를 향상시켰다.
'''


inData = input()
croAlpha = ['c=', 'c-', 'dz=', 'd-', 'lj', 'nj', 's=', 'z=']
for i in range(97, 123):
    croAlpha.append(chr(i))
    
answer = 0
for word in croAlpha:
    if inData.find(word) > -1:
        answer += inData.count(word)
        inData = inData.replace(word, ' ')
        
print(answer)


        
